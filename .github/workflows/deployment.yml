name: Multi-Environment CI/CD - ECS Fargate

on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'

env:
  AWS_REGION: ap-south-1

jobs:
  build-test-analyze:
    name: Build, Test, Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm test

      - name: Static Code Analysis (CodeQL)
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nodejs-app-artifacts
          path: .

  deploy:
    name: Deploy to AWS ECS Fargate
    needs: build-test-analyze
    runs-on: ubuntu-latest

    # defines environments and approvals
    environment:
      name: ${{ github.ref_name == 'main' && 'production' || github.ref_name == 'develop' && 'staging' || 'development' }}
      url: ${{ steps.healthcheck.outputs.app_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: nodejs-app-artifacts

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set Environment Variables
        id: envsetup
        run: |
          if [[ "${GITHUB_REF##*/}" == main ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
            echo "ecs_cluster=nodejs-cluster-prod" >> $GITHUB_OUTPUT
            echo "ecs_service=nodejs-service-prod" >> $GITHUB_OUTPUT
            echo "tf_state_key=ecs-nodejs-app/prod/terraform.tfstate
